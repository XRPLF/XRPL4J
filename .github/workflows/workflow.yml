name: xrpl4j-CI

on:
  push:
  pull_request:
    types: [assigned]
jobs:
  build_java8:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      # Set up Java 8
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8.0.352+8
          distribution: adopt
      - name: Cache mvn dependencies
        uses: actions/cache@v2
        env:
          cache-name: mvn-deps
        with:
          path: ~/.m2
          key: ${{ env.cache-name }}-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ env.cache-name }}-
      - name: Build
        run: mvn dependency:go-offline install
      - name: Upload to Codecov
        uses: codecov/codecov-action@v1.0.15

  build_android:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      # Set up Android
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Cache mvn dependencies
        uses: actions/cache@v2
        env:
          cache-name: mvn-deps
        with:
          path: ~/.m2
          key: ${{ env.cache-name }}-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ env.cache-name }}-
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true -Pandroid

  build_other_java:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against each major Java version
        java: [ 9.0.4+11, 10.0.2+13.1, 11.0.17+8, 12.0.2+10.1, 13.0.2+8.1, 14.0.2+12, 15.0.2+7, 16.0.2+7, 17.0.5+8, 18.0.2+101, 19.0.1+10 ]
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      # Set up Java version
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: adopt
      - name: Cache mvn dependencies
        uses: actions/cache@v2
        env:
          cache-name: mvn-deps
        with:
          path: ~/.m2
          key: ${{ env.cache-name }}-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ env.cache-name }}-
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true

  build_open_jdk_non_us:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Set up Adopt OpenJDK Hotspot 16
      - name: Set up OpenJDK 16
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 16.0.2+7
      - name: Cache mvn dependencies
        uses: actions/cache@v2
        env:
          cache-name: mvn-deps
        with:
          path: ~/.m2
          key: ${{ env.cache-name }}-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ env.cache-name }}-
      # Maven install with JVM locale = de_DE
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true -DargLine="-Duser.language=de -Duser.country=DE"

  build_devnet_its:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      # Set up Java 8
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8.0.352+8
          distribution: adopt
      - name: Cache mvn dependencies
        uses: actions/cache@v2
        env:
          cache-name: mvn-deps
        with:
          path: ~/.m2
          key: ${{ env.cache-name }}-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ env.cache-name }}-
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true -DuseDevnet

  build_testnet_its:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      # Set up Java 8
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8.0.352+8
          distribution: adopt
      - name: Cache mvn dependencies
        uses: actions/cache@v2
        env:
          cache-name: mvn-deps
        with:
          path: ~/.m2
          key: ${{ env.cache-name }}-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ env.cache-name }}-
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true -DuseTestnet